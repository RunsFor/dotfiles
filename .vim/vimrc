set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'wincent/command-t'
Plugin 'scrooloose/nerdtree'
Plugin 'bling/vim-airline'
Plugin 'thoughtbot/vim-rspec'
Plugin 'kchmck/vim-coffee-script'
Plugin 'mattn/webapi-vim'
Plugin 'mattn/gist-vim'
Plugin 'vim-ruby/vim-ruby'
Plugin 'majutsushi/tagbar'
Plugin 'mattn/emmet-vim'
Plugin 'kmdsbng/vim-ruby-eval'
Plugin 'ervandew/screen'
Plugin 'slim-template/vim-slim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-fugitive'

" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"

" Enable per-directory vimrc files
set exrc

" Show line numbers in vim
set number

" https://github.com/vim-ruby/vim-ruby/wiki/VimRubySupport
set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins
 
" Solarized theme for vim
syntax enable
set background=light
colorscheme solarized

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_check_on_w = 1

" Keep swap files in tmp dir
set dir=~/tmp

" Default shell is zsh
set shell=/usr/bin/zsh

" Bind hotkey to CtrlP plugin
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
set wildignore+=*tmp/*,*.git/*,.*,*log/*,*client/node_modules/*,*client/build/*,*client/vendor/*,*/server/coverage/*

map <C-o> :NERDTreeToggle<CR>

let Tlist_Ctags_Cmd = '/usr/local/bin/ctags'
let Tlist_Inc_Winwidth = 0
map <C-l> :TlistToggle<CR>

" Spaces instead Tabs
:set expandtab
:set tabstop=2
:set shiftwidth=2

" More natural splits opening
set splitbelow
set splitright

" Easier way to create vim panes
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Remove timeouts on escape key
set timeoutlen=1000 ttimeoutlen=1

" Airline plugin not appears when onely one window open
set laststatus=2
let g:airline_powerline_fonts=1
set noshowmode

" Let vim load the right ruby version
" http://rvm.io/integration/vim
set shell=/bin/sh

" RSpec.vim mappings
map <Leader>t :w\|:call RunCurrentSpecFile()<CR>
map <Leader>s :w\|:call RunNearestSpec()<CR>
map <Leader>l :w\|:call RunLastSpec()<CR>
map <Leader>a :w\|:call RunAllSpecs()<CR>
let g:rspec_command = "!zeus rspec --color {spec}"

" Fix delete key problem
" http://vim.wikia.com/wiki/Backspace_and_delete_problems
set backspace=2

"Tagbar
nmap <F8> :TagbarToggle<CR>

" Minimal width of the current window
let &winwidth = 100

" Emmet vim settings
let g:user_emmet_install_global = 0
autocmd FileType html,css EmmetInstall
let g:user_emmet_leader_key='<C-w>'

" Ruby Eval mappings
map <Leader>e :RubyEval<CR>

" Config for irb-config
" Screen settings
let g:ScreenImpl = 'Tmux'
let g:ScreenShellTmuxInitArgs = '-2'
let g:ScreenShellInitialFocus = 'shell'
let g:ScreenShellQuitOnVimExit = 0
map <F6> :ScreenShellVertical<CR>
command -nargs=? -complete=shellcmd W  :w | :call ScreenShellSend("load '".@%."';")
map <Leader>r :w<CR> :call ScreenShellSend("rspec ".@% . ':' . line('.'))<CR>
map <Leader>e :w<CR> :call ScreenShellSend("cucumber --format=pretty ".@% . ':' . line('.'))<CR>
map <Leader>b :w<CR> :call ScreenShellSend("break ".@% . ':' . line('.'))<CR>

" Enable mouse use in all modes
set mouse=a
" Send more characters for redraws
set ttyfast
" Set this to the name of your terminal that supports mouse codes.
" Must be one of: xterm, xterm2, netterm, dec, jsbterm, pterm
set ttymouse=xterm2

" Installing fuzzy finder (https://github.com/junegunn/fzf)
set rtp+=/usr/local/opt/fzf

" Use 2 characters tabstop for lua files
autocmd Filetype lua setlocal noet ci pi sts=0 sw=2 ts=2
